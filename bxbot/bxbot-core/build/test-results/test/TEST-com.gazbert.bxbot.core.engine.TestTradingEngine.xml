<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.gazbert.bxbot.core.engine.TestTradingEngine" tests="10" skipped="0" failures="0" errors="0" timestamp="2018-01-08T20:56:10" hostname="ricebook" time="20.949">
  <properties/>
  <testcase name="testEngineShutsDownWhenEmergencyStopBalanceIfBreached" classname="com.gazbert.bxbot.core.engine.TestTradingEngine" time="2.815"/>
  <testcase name="testEngineExecutesTradeCyclesAndCanBeShutdownSuccessfully" classname="com.gazbert.bxbot.core.engine.TestTradingEngine" time="2.014"/>
  <testcase name="testEngineDoesNotPerformEmergencyStopCheckWhenEmergencyStopBalanceIsZero" classname="com.gazbert.bxbot.core.engine.TestTradingEngine" time="2.009"/>
  <testcase name="testEngineShutsDownWhenItReceivesUnexpectedExceptionFromTradingStrategy" classname="com.gazbert.bxbot.core.engine.TestTradingEngine" time="2.034"/>
  <testcase name="testEngineShutsDownWhenItReceivesUnexpectedExceptionFromExchangeAdapter" classname="com.gazbert.bxbot.core.engine.TestTradingEngine" time="2.012"/>
  <testcase name="testEngineShutsDownWhenItReceivesTradingApiExceptionFromExchangeAdapter" classname="com.gazbert.bxbot.core.engine.TestTradingEngine" time="2.016"/>
  <testcase name="testEngineExecutesNextTradeCyclesAfterReceivingExchangeNetworkException" classname="com.gazbert.bxbot.core.engine.TestTradingEngine" time="5.008"/>
  <testcase name="testEngineShutsDownWhenItReceivesStrategyExceptionFromTradingStrategy" classname="com.gazbert.bxbot.core.engine.TestTradingEngine" time="2.015"/>
  <testcase name="testEngineCannotBeStartedMoreThanOnce" classname="com.gazbert.bxbot.core.engine.TestTradingEngine" time="1.012"/>
  <testcase name="testEngineInitialisesSuccessfully" classname="com.gazbert.bxbot.core.engine.TestTradingEngine" time="0.003"/>
  <system-out><![CDATA[3242 [Test worker] 2018-01-08 14:56:12,117 INFO  TradingEngine <init>() - Initialising Trading Engine...
3249 [Test worker] 2018-01-08 14:56:12,124 INFO  TradingEngine initConfig() - Initialising BX-bot config...
3259 [Test worker] 2018-01-08 14:56:12,134 INFO  TradingEngine loadExchangeAdapterConfig() - Fetched Exchange config from repository: ExchangeConfig{exchangeName=Bitstamp, exchangeAdapter=com.my.adapters.DummyBitstampExchangeAdapter, networkConfig=NetworkConfig{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}, optionalConfig=OptionalConfig{items={sell-fee=0.25}}}
3260 [Test worker] 2018-01-08 14:56:12,135 INFO  TradingEngine loadExchangeAdapterConfig() - Trading Engine will use Exchange Adapter for: Bitstamp
3261 [Test worker] 2018-01-08 14:56:12,136 INFO  TradingEngine loadExchangeAdapterConfig() - NetworkConfiguration has been set: NetworkConfigImpl{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}
3263 [Test worker] 2018-01-08 14:56:12,138 INFO  TradingEngine loadExchangeAdapterConfig() - Optional Exchange Adapter config has been set: OptionalConfigImpl{items={sell-fee=0.25}}
3264 [Test worker] 2018-01-08 14:56:12,139 INFO  TradingEngine loadEngineConfig() - Fetched Engine config from repository: EngineConfig{botId=null, botName=null, emergencyStopCurrency=BTC, emergencyStopBalance=0.5, tradeCycleInterval=1}
3266 [Test worker] 2018-01-08 14:56:12,141 DEBUG TradingEngine loadTradingStrategyConfig() - Fetched Strategy config from repository: [StrategyConfig{id=MyMacdStrategy_v3, name=MACD Shorting algo, description=MACD Shorting algo description, className=com.my.strats.MyMacdStrategy, beanName=null, configItems={btc-sell-order-amount=0.2}}]
3267 [Test worker] 2018-01-08 14:56:12,142 INFO  TradingEngine loadTradingStrategyConfig() - Registered Trading Strategy with Trading Engine - ID: MyMacdStrategy_v3
3267 [Test worker] 2018-01-08 14:56:12,142 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Fetched Markets config from repository: [MarketConfig{id=btc_usd, name=BTC/USD, baseCurrency=BTC, counterCurrency=USD, enabled=true, tradingStrategyId=MyMacdStrategy_v3}]
3272 [Test worker] 2018-01-08 14:56:12,147 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Market Trading Strategy Id: MyMacdStrategy_v3
3273 [Test worker] 2018-01-08 14:56:12,148 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - StrategyConfigImpl (optional): StrategyConfigItems{items={btc-sell-order-amount=0.2}}
3274 [Test worker] 2018-01-08 14:56:12,149 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Initialized trading strategy successfully. Name: [MACD Shorting algo] Class: com.my.strats.MyMacdStrategy
3275 [Test worker] 2018-01-08 14:56:12,150 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Loaded and set Market configuration successfully!
3276 [Test worker] 2018-01-08 14:56:12,151 INFO  TradingEngine runMainControlLoop() - Starting Trading Engine for null ...
3277 [Test worker] 2018-01-08 14:56:12,152 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
3277 [Test worker] 2018-01-08 14:56:12,152 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
3279 [Test worker] 2018-01-08 14:56:12,154 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop Currency balance available on exchange is [0.49999999] BTC
3279 [Test worker] 2018-01-08 14:56:12,154 INFO  TradingEngine isEmergencyStopLimitBreached() - Balance that will stop ALL trading across ALL markets is [0.5] BTC
3282 [Test worker] 2018-01-08 14:56:12,157 FATAL TradingEngine isEmergencyStopLimitBreached() - EMERGENCY STOP triggered! - Current Emergency Stop Currency [BTC] wallet balance [0.49999999] on exchange is lower than configured Emergency Stop balance [0.5] BTC
3288 [Test worker] 2018-01-08 14:56:12,163 FATAL TradingEngine runMainControlLoop() - BX-bot null is shutting down NOW!
4292 [Test worker] 2018-01-08 14:56:13,167 INFO  TradingEngine isRunning() - isRunning: false
4292 [Test worker] 2018-01-08 14:56:13,167 INFO  TradingEngine isRunning() - isRunning: false
4303 [Test worker] 2018-01-08 14:56:13,178 INFO  TradingEngine <init>() - Initialising Trading Engine...
4307 [pool-2-thread-1] 2018-01-08 14:56:13,182 INFO  TradingEngine initConfig() - Initialising BX-bot config...
4307 [pool-2-thread-1] 2018-01-08 14:56:13,182 INFO  TradingEngine loadExchangeAdapterConfig() - Fetched Exchange config from repository: ExchangeConfig{exchangeName=Bitstamp, exchangeAdapter=com.my.adapters.DummyBitstampExchangeAdapter, networkConfig=NetworkConfig{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}, optionalConfig=OptionalConfig{items={sell-fee=0.25}}}
4308 [pool-2-thread-1] 2018-01-08 14:56:13,183 INFO  TradingEngine loadExchangeAdapterConfig() - Trading Engine will use Exchange Adapter for: Bitstamp
4308 [pool-2-thread-1] 2018-01-08 14:56:13,183 INFO  TradingEngine loadExchangeAdapterConfig() - NetworkConfiguration has been set: NetworkConfigImpl{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}
4308 [pool-2-thread-1] 2018-01-08 14:56:13,183 INFO  TradingEngine loadExchangeAdapterConfig() - Optional Exchange Adapter config has been set: OptionalConfigImpl{items={sell-fee=0.25}}
4308 [pool-2-thread-1] 2018-01-08 14:56:13,183 INFO  TradingEngine loadEngineConfig() - Fetched Engine config from repository: EngineConfig{botId=null, botName=null, emergencyStopCurrency=BTC, emergencyStopBalance=0.5, tradeCycleInterval=1}
4308 [pool-2-thread-1] 2018-01-08 14:56:13,183 DEBUG TradingEngine loadTradingStrategyConfig() - Fetched Strategy config from repository: [StrategyConfig{id=MyMacdStrategy_v3, name=MACD Shorting algo, description=MACD Shorting algo description, className=com.my.strats.MyMacdStrategy, beanName=null, configItems={btc-sell-order-amount=0.2}}]
4309 [pool-2-thread-1] 2018-01-08 14:56:13,184 INFO  TradingEngine loadTradingStrategyConfig() - Registered Trading Strategy with Trading Engine - ID: MyMacdStrategy_v3
4309 [pool-2-thread-1] 2018-01-08 14:56:13,184 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Fetched Markets config from repository: [MarketConfig{id=btc_usd, name=BTC/USD, baseCurrency=BTC, counterCurrency=USD, enabled=true, tradingStrategyId=MyMacdStrategy_v3}]
4309 [pool-2-thread-1] 2018-01-08 14:56:13,184 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Market Trading Strategy Id: MyMacdStrategy_v3
4309 [pool-2-thread-1] 2018-01-08 14:56:13,184 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - StrategyConfigImpl (optional): StrategyConfigItems{items={btc-sell-order-amount=0.2}}
4309 [pool-2-thread-1] 2018-01-08 14:56:13,184 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Initialized trading strategy successfully. Name: [MACD Shorting algo] Class: com.my.strats.MyMacdStrategy
4310 [pool-2-thread-1] 2018-01-08 14:56:13,185 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Loaded and set Market configuration successfully!
4310 [pool-2-thread-1] 2018-01-08 14:56:13,185 INFO  TradingEngine runMainControlLoop() - Starting Trading Engine for null ...
4310 [pool-2-thread-1] 2018-01-08 14:56:13,185 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
4310 [pool-2-thread-1] 2018-01-08 14:56:13,185 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
4310 [pool-2-thread-1] 2018-01-08 14:56:13,185 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop Currency balance available on exchange is [0.5] BTC
4311 [pool-2-thread-1] 2018-01-08 14:56:13,186 INFO  TradingEngine isEmergencyStopLimitBreached() - Balance that will stop ALL trading across ALL markets is [0.5] BTC
4311 [pool-2-thread-1] 2018-01-08 14:56:13,186 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop check PASSED!
4312 [pool-2-thread-1] 2018-01-08 14:56:13,187 INFO  TradingEngine runMainControlLoop() - Executing Trading Strategy ---> $Proxy13
4312 [pool-2-thread-1] 2018-01-08 14:56:13,187 INFO  TradingEngine runMainControlLoop() - *** Sleeping 1s til next trade cycle... ***
5307 [Test worker] 2018-01-08 14:56:14,182 INFO  TradingEngine isRunning() - isRunning: true
5307 [Test worker] 2018-01-08 14:56:14,182 INFO  TradingEngine isRunning() - isRunning: true
5309 [Test worker] 2018-01-08 14:56:14,184 INFO  TradingEngine shutdown() - Shutdown request received!
5310 [Test worker] 2018-01-08 14:56:14,185 INFO  TradingEngine shutdown() - Engine originally started in thread: Thread[pool-2-thread-1,5,main]
5311 [pool-2-thread-1] 2018-01-08 14:56:14,186 WARN  TradingEngine runMainControlLoop() - Control Loop thread interrupted when sleeping before next trade cycle
5311 [pool-2-thread-1] 2018-01-08 14:56:14,186 FATAL TradingEngine runMainControlLoop() - BX-bot null is shutting down NOW!
6311 [Test worker] 2018-01-08 14:56:15,186 INFO  TradingEngine isRunning() - isRunning: false
6312 [Test worker] 2018-01-08 14:56:15,187 INFO  TradingEngine isRunning() - isRunning: false
6315 [Test worker] 2018-01-08 14:56:15,190 INFO  TradingEngine <init>() - Initialising Trading Engine...
6318 [pool-3-thread-1] 2018-01-08 14:56:15,193 INFO  TradingEngine initConfig() - Initialising BX-bot config...
6318 [pool-3-thread-1] 2018-01-08 14:56:15,193 INFO  TradingEngine loadExchangeAdapterConfig() - Fetched Exchange config from repository: ExchangeConfig{exchangeName=Bitstamp, exchangeAdapter=com.my.adapters.DummyBitstampExchangeAdapter, networkConfig=NetworkConfig{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}, optionalConfig=OptionalConfig{items={sell-fee=0.25}}}
6318 [pool-3-thread-1] 2018-01-08 14:56:15,193 INFO  TradingEngine loadExchangeAdapterConfig() - Trading Engine will use Exchange Adapter for: Bitstamp
6318 [pool-3-thread-1] 2018-01-08 14:56:15,193 INFO  TradingEngine loadExchangeAdapterConfig() - NetworkConfiguration has been set: NetworkConfigImpl{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}
6318 [pool-3-thread-1] 2018-01-08 14:56:15,193 INFO  TradingEngine loadExchangeAdapterConfig() - Optional Exchange Adapter config has been set: OptionalConfigImpl{items={sell-fee=0.25}}
6318 [pool-3-thread-1] 2018-01-08 14:56:15,193 INFO  TradingEngine loadEngineConfig() - Fetched Engine config from repository: EngineConfig{botId=null, botName=null, emergencyStopCurrency=BTC, emergencyStopBalance=0, tradeCycleInterval=1}
6319 [pool-3-thread-1] 2018-01-08 14:56:15,194 DEBUG TradingEngine loadTradingStrategyConfig() - Fetched Strategy config from repository: [StrategyConfig{id=MyMacdStrategy_v3, name=MACD Shorting algo, description=MACD Shorting algo description, className=com.my.strats.MyMacdStrategy, beanName=null, configItems={btc-sell-order-amount=0.2}}]
6319 [pool-3-thread-1] 2018-01-08 14:56:15,194 INFO  TradingEngine loadTradingStrategyConfig() - Registered Trading Strategy with Trading Engine - ID: MyMacdStrategy_v3
6319 [pool-3-thread-1] 2018-01-08 14:56:15,194 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Fetched Markets config from repository: [MarketConfig{id=btc_usd, name=BTC/USD, baseCurrency=BTC, counterCurrency=USD, enabled=true, tradingStrategyId=MyMacdStrategy_v3}]
6319 [pool-3-thread-1] 2018-01-08 14:56:15,194 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Market Trading Strategy Id: MyMacdStrategy_v3
6319 [pool-3-thread-1] 2018-01-08 14:56:15,194 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - StrategyConfigImpl (optional): StrategyConfigItems{items={btc-sell-order-amount=0.2}}
6319 [pool-3-thread-1] 2018-01-08 14:56:15,194 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Initialized trading strategy successfully. Name: [MACD Shorting algo] Class: com.my.strats.MyMacdStrategy
6319 [pool-3-thread-1] 2018-01-08 14:56:15,194 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Loaded and set Market configuration successfully!
6320 [pool-3-thread-1] 2018-01-08 14:56:15,195 INFO  TradingEngine runMainControlLoop() - Starting Trading Engine for null ...
6320 [pool-3-thread-1] 2018-01-08 14:56:15,195 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
6320 [pool-3-thread-1] 2018-01-08 14:56:15,195 INFO  TradingEngine runMainControlLoop() - Executing Trading Strategy ---> $Proxy13
6320 [pool-3-thread-1] 2018-01-08 14:56:15,195 INFO  TradingEngine runMainControlLoop() - *** Sleeping 1s til next trade cycle... ***
7318 [Test worker] 2018-01-08 14:56:16,193 INFO  TradingEngine isRunning() - isRunning: true
7318 [Test worker] 2018-01-08 14:56:16,193 INFO  TradingEngine isRunning() - isRunning: true
7318 [Test worker] 2018-01-08 14:56:16,193 INFO  TradingEngine shutdown() - Shutdown request received!
7318 [Test worker] 2018-01-08 14:56:16,193 INFO  TradingEngine shutdown() - Engine originally started in thread: Thread[pool-3-thread-1,5,main]
7319 [pool-3-thread-1] 2018-01-08 14:56:16,194 WARN  TradingEngine runMainControlLoop() - Control Loop thread interrupted when sleeping before next trade cycle
7319 [pool-3-thread-1] 2018-01-08 14:56:16,194 FATAL TradingEngine runMainControlLoop() - BX-bot null is shutting down NOW!
8320 [Test worker] 2018-01-08 14:56:17,195 INFO  TradingEngine isRunning() - isRunning: false
8320 [Test worker] 2018-01-08 14:56:17,195 INFO  TradingEngine isRunning() - isRunning: false
8331 [Test worker] 2018-01-08 14:56:17,206 INFO  TradingEngine <init>() - Initialising Trading Engine...
8331 [Test worker] 2018-01-08 14:56:17,206 INFO  TradingEngine initConfig() - Initialising BX-bot config...
8332 [Test worker] 2018-01-08 14:56:17,207 INFO  TradingEngine loadExchangeAdapterConfig() - Fetched Exchange config from repository: ExchangeConfig{exchangeName=Bitstamp, exchangeAdapter=com.my.adapters.DummyBitstampExchangeAdapter, networkConfig=NetworkConfig{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}, optionalConfig=OptionalConfig{items={sell-fee=0.25}}}
8333 [Test worker] 2018-01-08 14:56:17,208 INFO  TradingEngine loadExchangeAdapterConfig() - Trading Engine will use Exchange Adapter for: Bitstamp
8333 [Test worker] 2018-01-08 14:56:17,208 INFO  TradingEngine loadExchangeAdapterConfig() - NetworkConfiguration has been set: NetworkConfigImpl{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}
8334 [Test worker] 2018-01-08 14:56:17,209 INFO  TradingEngine loadExchangeAdapterConfig() - Optional Exchange Adapter config has been set: OptionalConfigImpl{items={sell-fee=0.25}}
8334 [Test worker] 2018-01-08 14:56:17,209 INFO  TradingEngine loadEngineConfig() - Fetched Engine config from repository: EngineConfig{botId=null, botName=null, emergencyStopCurrency=BTC, emergencyStopBalance=0.5, tradeCycleInterval=1}
8335 [Test worker] 2018-01-08 14:56:17,210 DEBUG TradingEngine loadTradingStrategyConfig() - Fetched Strategy config from repository: [StrategyConfig{id=MyMacdStrategy_v3, name=MACD Shorting algo, description=MACD Shorting algo description, className=com.my.strats.MyMacdStrategy, beanName=null, configItems={btc-sell-order-amount=0.2}}]
8335 [Test worker] 2018-01-08 14:56:17,210 INFO  TradingEngine loadTradingStrategyConfig() - Registered Trading Strategy with Trading Engine - ID: MyMacdStrategy_v3
8336 [Test worker] 2018-01-08 14:56:17,211 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Fetched Markets config from repository: [MarketConfig{id=btc_usd, name=BTC/USD, baseCurrency=BTC, counterCurrency=USD, enabled=true, tradingStrategyId=MyMacdStrategy_v3}]
8336 [Test worker] 2018-01-08 14:56:17,211 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Market Trading Strategy Id: MyMacdStrategy_v3
8337 [Test worker] 2018-01-08 14:56:17,212 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - StrategyConfigImpl (optional): StrategyConfigItems{items={btc-sell-order-amount=0.2}}
8337 [Test worker] 2018-01-08 14:56:17,212 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Initialized trading strategy successfully. Name: [MACD Shorting algo] Class: com.my.strats.MyMacdStrategy
8338 [Test worker] 2018-01-08 14:56:17,213 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Loaded and set Market configuration successfully!
8339 [Test worker] 2018-01-08 14:56:17,214 INFO  TradingEngine runMainControlLoop() - Starting Trading Engine for null ...
8339 [Test worker] 2018-01-08 14:56:17,214 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
8340 [Test worker] 2018-01-08 14:56:17,215 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
8340 [Test worker] 2018-01-08 14:56:17,215 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop Currency balance available on exchange is [0.5] BTC
8341 [Test worker] 2018-01-08 14:56:17,216 INFO  TradingEngine isEmergencyStopLimitBreached() - Balance that will stop ALL trading across ALL markets is [0.5] BTC
8342 [Test worker] 2018-01-08 14:56:17,217 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop check PASSED!
8342 [Test worker] 2018-01-08 14:56:17,217 INFO  TradingEngine runMainControlLoop() - Executing Trading Strategy ---> $Proxy13
8343 [Test worker] 2018-01-08 14:56:17,218 INFO  TradingEngine runMainControlLoop() - *** Sleeping 1s til next trade cycle... ***
9343 [Test worker] 2018-01-08 14:56:18,218 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
9343 [Test worker] 2018-01-08 14:56:18,218 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
9343 [Test worker] 2018-01-08 14:56:18,218 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop Currency balance available on exchange is [0.5] BTC
9344 [Test worker] 2018-01-08 14:56:18,219 INFO  TradingEngine isEmergencyStopLimitBreached() - Balance that will stop ALL trading across ALL markets is [0.5] BTC
9344 [Test worker] 2018-01-08 14:56:18,219 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop check PASSED!
9344 [Test worker] 2018-01-08 14:56:18,219 INFO  TradingEngine runMainControlLoop() - Executing Trading Strategy ---> $Proxy13
9344 [Test worker] 2018-01-08 14:56:18,219 FATAL TradingEngine runMainControlLoop() - An unexpected FATAL error has occurred in Exchange Adapter or Trading Strategy!
java.lang.IllegalArgumentException: Ah, curse your sudden but inevitable betrayal!
	at org.easymock.internal.MockInvocationHandler.invoke(MockInvocationHandler.java:46) ~[easymock-3.5.1.jar:3.5.1]
	at org.easymock.internal.ObjectMethodsFilter.invoke(ObjectMethodsFilter.java:94) ~[easymock-3.5.1.jar:3.5.1]
	at com.sun.proxy.$Proxy13.execute(Unknown Source) ~[?:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.runMainControlLoop(TradingEngine.java:228) [main/:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.start(TradingEngine.java:191) [main/:?]
	at com.gazbert.bxbot.core.engine.TestTradingEngine.testEngineShutsDownWhenItReceivesUnexpectedExceptionFromTradingStrategy(TestTradingEngine.java:346) [test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:326) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:310) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:131) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$TestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:147) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.evaluateStatement(PowerMockJUnit47RunnerDelegateImpl.java:107) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:298) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:218) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:160) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:134) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:136) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:121) [powermock-module-junit4-common-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57) [powermock-module-junit4-common-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) [gradle-testing-base-4.4.1.jar:4.4.1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) [gradle-messaging-4.4.1.jar:4.4.1]
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source) [?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108) [gradle-testing-base-4.4.1.jar:4.4.1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) [gradle-base-services-4.4.1.jar:4.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) [gradle-base-services-4.4.1.jar:4.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_144]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_144]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) [gradle-base-services-4.4.1.jar:4.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_144]
9355 [Test worker] 2018-01-08 14:56:18,230 FATAL TradingEngine runMainControlLoop() - BX-bot null is shutting down NOW!
10356 [Test worker] 2018-01-08 14:56:19,231 INFO  TradingEngine isRunning() - isRunning: false
10356 [Test worker] 2018-01-08 14:56:19,231 INFO  TradingEngine isRunning() - isRunning: false
10359 [Test worker] 2018-01-08 14:56:19,234 INFO  TradingEngine <init>() - Initialising Trading Engine...
10359 [Test worker] 2018-01-08 14:56:19,234 INFO  TradingEngine initConfig() - Initialising BX-bot config...
10359 [Test worker] 2018-01-08 14:56:19,234 INFO  TradingEngine loadExchangeAdapterConfig() - Fetched Exchange config from repository: ExchangeConfig{exchangeName=Bitstamp, exchangeAdapter=com.my.adapters.DummyBitstampExchangeAdapter, networkConfig=NetworkConfig{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}, optionalConfig=OptionalConfig{items={sell-fee=0.25}}}
10360 [Test worker] 2018-01-08 14:56:19,235 INFO  TradingEngine loadExchangeAdapterConfig() - Trading Engine will use Exchange Adapter for: Bitstamp
10360 [Test worker] 2018-01-08 14:56:19,235 INFO  TradingEngine loadExchangeAdapterConfig() - NetworkConfiguration has been set: NetworkConfigImpl{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}
10360 [Test worker] 2018-01-08 14:56:19,235 INFO  TradingEngine loadExchangeAdapterConfig() - Optional Exchange Adapter config has been set: OptionalConfigImpl{items={sell-fee=0.25}}
10360 [Test worker] 2018-01-08 14:56:19,235 INFO  TradingEngine loadEngineConfig() - Fetched Engine config from repository: EngineConfig{botId=null, botName=null, emergencyStopCurrency=BTC, emergencyStopBalance=0.5, tradeCycleInterval=1}
10360 [Test worker] 2018-01-08 14:56:19,235 DEBUG TradingEngine loadTradingStrategyConfig() - Fetched Strategy config from repository: [StrategyConfig{id=MyMacdStrategy_v3, name=MACD Shorting algo, description=MACD Shorting algo description, className=com.my.strats.MyMacdStrategy, beanName=null, configItems={btc-sell-order-amount=0.2}}]
10361 [Test worker] 2018-01-08 14:56:19,236 INFO  TradingEngine loadTradingStrategyConfig() - Registered Trading Strategy with Trading Engine - ID: MyMacdStrategy_v3
10361 [Test worker] 2018-01-08 14:56:19,236 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Fetched Markets config from repository: [MarketConfig{id=btc_usd, name=BTC/USD, baseCurrency=BTC, counterCurrency=USD, enabled=true, tradingStrategyId=MyMacdStrategy_v3}]
10361 [Test worker] 2018-01-08 14:56:19,236 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Market Trading Strategy Id: MyMacdStrategy_v3
10361 [Test worker] 2018-01-08 14:56:19,236 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - StrategyConfigImpl (optional): StrategyConfigItems{items={btc-sell-order-amount=0.2}}
10361 [Test worker] 2018-01-08 14:56:19,236 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Initialized trading strategy successfully. Name: [MACD Shorting algo] Class: com.my.strats.MyMacdStrategy
10361 [Test worker] 2018-01-08 14:56:19,236 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Loaded and set Market configuration successfully!
10362 [Test worker] 2018-01-08 14:56:19,237 INFO  TradingEngine runMainControlLoop() - Starting Trading Engine for null ...
10362 [Test worker] 2018-01-08 14:56:19,237 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
10362 [Test worker] 2018-01-08 14:56:19,237 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
10362 [Test worker] 2018-01-08 14:56:19,237 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop Currency balance available on exchange is [0.5] BTC
10362 [Test worker] 2018-01-08 14:56:19,237 INFO  TradingEngine isEmergencyStopLimitBreached() - Balance that will stop ALL trading across ALL markets is [0.5] BTC
10363 [Test worker] 2018-01-08 14:56:19,238 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop check PASSED!
10363 [Test worker] 2018-01-08 14:56:19,238 INFO  TradingEngine runMainControlLoop() - Executing Trading Strategy ---> $Proxy13
10363 [Test worker] 2018-01-08 14:56:19,238 INFO  TradingEngine runMainControlLoop() - *** Sleeping 1s til next trade cycle... ***
11364 [Test worker] 2018-01-08 14:56:20,239 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
11364 [Test worker] 2018-01-08 14:56:20,239 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
11364 [Test worker] 2018-01-08 14:56:20,239 FATAL TradingEngine runMainControlLoop() - An unexpected FATAL error has occurred in Exchange Adapter or Trading Strategy!
java.lang.IllegalStateException: I had to rewire the grav thrust because somebody won't replace that crappy compression coil.
	at org.easymock.internal.MockInvocationHandler.invoke(MockInvocationHandler.java:46) ~[easymock-3.5.1.jar:3.5.1]
	at org.easymock.internal.ObjectMethodsFilter.invoke(ObjectMethodsFilter.java:94) ~[easymock-3.5.1.jar:3.5.1]
	at com.sun.proxy.$Proxy12.getBalanceInfo(Unknown Source) ~[?:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.isEmergencyStopLimitBreached(TradingEngine.java:348) ~[main/:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.runMainControlLoop(TradingEngine.java:221) [main/:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.start(TradingEngine.java:191) [main/:?]
	at com.gazbert.bxbot.core.engine.TestTradingEngine.testEngineShutsDownWhenItReceivesUnexpectedExceptionFromExchangeAdapter(TestTradingEngine.java:386) [test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:326) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:310) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:131) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$TestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:147) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.evaluateStatement(PowerMockJUnit47RunnerDelegateImpl.java:107) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:298) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:218) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:160) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:134) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:136) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:121) [powermock-module-junit4-common-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57) [powermock-module-junit4-common-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) [gradle-testing-base-4.4.1.jar:4.4.1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) [gradle-messaging-4.4.1.jar:4.4.1]
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source) [?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108) [gradle-testing-base-4.4.1.jar:4.4.1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) [gradle-base-services-4.4.1.jar:4.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) [gradle-base-services-4.4.1.jar:4.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_144]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_144]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) [gradle-base-services-4.4.1.jar:4.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_144]
11368 [Test worker] 2018-01-08 14:56:20,243 FATAL TradingEngine runMainControlLoop() - BX-bot null is shutting down NOW!
12369 [Test worker] 2018-01-08 14:56:21,244 INFO  TradingEngine isRunning() - isRunning: false
12369 [Test worker] 2018-01-08 14:56:21,244 INFO  TradingEngine isRunning() - isRunning: false
12371 [Test worker] 2018-01-08 14:56:21,246 INFO  TradingEngine <init>() - Initialising Trading Engine...
12372 [Test worker] 2018-01-08 14:56:21,247 INFO  TradingEngine initConfig() - Initialising BX-bot config...
12372 [Test worker] 2018-01-08 14:56:21,247 INFO  TradingEngine loadExchangeAdapterConfig() - Fetched Exchange config from repository: ExchangeConfig{exchangeName=Bitstamp, exchangeAdapter=com.my.adapters.DummyBitstampExchangeAdapter, networkConfig=NetworkConfig{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}, optionalConfig=OptionalConfig{items={sell-fee=0.25}}}
12372 [Test worker] 2018-01-08 14:56:21,247 INFO  TradingEngine loadExchangeAdapterConfig() - Trading Engine will use Exchange Adapter for: Bitstamp
12372 [Test worker] 2018-01-08 14:56:21,247 INFO  TradingEngine loadExchangeAdapterConfig() - NetworkConfiguration has been set: NetworkConfigImpl{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}
12373 [Test worker] 2018-01-08 14:56:21,248 INFO  TradingEngine loadExchangeAdapterConfig() - Optional Exchange Adapter config has been set: OptionalConfigImpl{items={sell-fee=0.25}}
12373 [Test worker] 2018-01-08 14:56:21,248 INFO  TradingEngine loadEngineConfig() - Fetched Engine config from repository: EngineConfig{botId=null, botName=null, emergencyStopCurrency=BTC, emergencyStopBalance=0.5, tradeCycleInterval=1}
12373 [Test worker] 2018-01-08 14:56:21,248 DEBUG TradingEngine loadTradingStrategyConfig() - Fetched Strategy config from repository: [StrategyConfig{id=MyMacdStrategy_v3, name=MACD Shorting algo, description=MACD Shorting algo description, className=com.my.strats.MyMacdStrategy, beanName=null, configItems={btc-sell-order-amount=0.2}}]
12373 [Test worker] 2018-01-08 14:56:21,248 INFO  TradingEngine loadTradingStrategyConfig() - Registered Trading Strategy with Trading Engine - ID: MyMacdStrategy_v3
12373 [Test worker] 2018-01-08 14:56:21,248 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Fetched Markets config from repository: [MarketConfig{id=btc_usd, name=BTC/USD, baseCurrency=BTC, counterCurrency=USD, enabled=true, tradingStrategyId=MyMacdStrategy_v3}]
12373 [Test worker] 2018-01-08 14:56:21,248 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Market Trading Strategy Id: MyMacdStrategy_v3
12374 [Test worker] 2018-01-08 14:56:21,249 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - StrategyConfigImpl (optional): StrategyConfigItems{items={btc-sell-order-amount=0.2}}
12374 [Test worker] 2018-01-08 14:56:21,249 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Initialized trading strategy successfully. Name: [MACD Shorting algo] Class: com.my.strats.MyMacdStrategy
12374 [Test worker] 2018-01-08 14:56:21,249 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Loaded and set Market configuration successfully!
12375 [Test worker] 2018-01-08 14:56:21,250 INFO  TradingEngine runMainControlLoop() - Starting Trading Engine for null ...
12375 [Test worker] 2018-01-08 14:56:21,250 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
12375 [Test worker] 2018-01-08 14:56:21,250 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
12376 [Test worker] 2018-01-08 14:56:21,251 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop Currency balance available on exchange is [0.5] BTC
12376 [Test worker] 2018-01-08 14:56:21,251 INFO  TradingEngine isEmergencyStopLimitBreached() - Balance that will stop ALL trading across ALL markets is [0.5] BTC
12376 [Test worker] 2018-01-08 14:56:21,251 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop check PASSED!
12376 [Test worker] 2018-01-08 14:56:21,251 INFO  TradingEngine runMainControlLoop() - Executing Trading Strategy ---> $Proxy13
12376 [Test worker] 2018-01-08 14:56:21,251 INFO  TradingEngine runMainControlLoop() - *** Sleeping 1s til next trade cycle... ***
13376 [Test worker] 2018-01-08 14:56:22,251 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
13376 [Test worker] 2018-01-08 14:56:22,251 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
13376 [Test worker] 2018-01-08 14:56:22,251 ERROR TradingEngine isEmergencyStopLimitBreached() - Failed to get Balance info from exchange to perform Emergency Stop check - letting Trade Engine error policy decide what to do next...
com.gazbert.bxbot.trading.api.TradingApiException: Ten percent of nothin' is ... let me do the math here ... nothin' into nothin' ... carry the nothin' ...
	at org.easymock.internal.MockInvocationHandler.invoke(MockInvocationHandler.java:46) ~[easymock-3.5.1.jar:3.5.1]
	at org.easymock.internal.ObjectMethodsFilter.invoke(ObjectMethodsFilter.java:94) ~[easymock-3.5.1.jar:3.5.1]
	at com.sun.proxy.$Proxy12.getBalanceInfo(Unknown Source) ~[?:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.isEmergencyStopLimitBreached(TradingEngine.java:348) [main/:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.runMainControlLoop(TradingEngine.java:221) [main/:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.start(TradingEngine.java:191) [main/:?]
	at com.gazbert.bxbot.core.engine.TestTradingEngine.testEngineShutsDownWhenItReceivesTradingApiExceptionFromExchangeAdapter(TestTradingEngine.java:426) [test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:326) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:310) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:131) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$TestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:147) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.evaluateStatement(PowerMockJUnit47RunnerDelegateImpl.java:107) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:298) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:218) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:160) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:134) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:136) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:121) [powermock-module-junit4-common-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57) [powermock-module-junit4-common-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) [gradle-testing-base-4.4.1.jar:4.4.1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) [gradle-messaging-4.4.1.jar:4.4.1]
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source) [?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108) [gradle-testing-base-4.4.1.jar:4.4.1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) [gradle-base-services-4.4.1.jar:4.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) [gradle-base-services-4.4.1.jar:4.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_144]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_144]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) [gradle-base-services-4.4.1.jar:4.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_144]
13382 [Test worker] 2018-01-08 14:56:22,257 FATAL TradingEngine runMainControlLoop() - A FATAL error has occurred in Exchange Adapter!
com.gazbert.bxbot.trading.api.TradingApiException: Ten percent of nothin' is ... let me do the math here ... nothin' into nothin' ... carry the nothin' ...
	at org.easymock.internal.MockInvocationHandler.invoke(MockInvocationHandler.java:46) ~[easymock-3.5.1.jar:3.5.1]
	at org.easymock.internal.ObjectMethodsFilter.invoke(ObjectMethodsFilter.java:94) ~[easymock-3.5.1.jar:3.5.1]
	at com.sun.proxy.$Proxy12.getBalanceInfo(Unknown Source) ~[?:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.isEmergencyStopLimitBreached(TradingEngine.java:348) ~[main/:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.runMainControlLoop(TradingEngine.java:221) [main/:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.start(TradingEngine.java:191) [main/:?]
	at com.gazbert.bxbot.core.engine.TestTradingEngine.testEngineShutsDownWhenItReceivesTradingApiExceptionFromExchangeAdapter(TestTradingEngine.java:426) [test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:326) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:310) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:131) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$TestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:147) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.evaluateStatement(PowerMockJUnit47RunnerDelegateImpl.java:107) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:298) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:218) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:160) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:134) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:136) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:121) [powermock-module-junit4-common-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57) [powermock-module-junit4-common-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) [gradle-testing-base-4.4.1.jar:4.4.1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) [gradle-messaging-4.4.1.jar:4.4.1]
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source) [?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108) [gradle-testing-base-4.4.1.jar:4.4.1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) [gradle-base-services-4.4.1.jar:4.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) [gradle-base-services-4.4.1.jar:4.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_144]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_144]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) [gradle-base-services-4.4.1.jar:4.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_144]
13383 [Test worker] 2018-01-08 14:56:22,258 FATAL TradingEngine runMainControlLoop() - BX-bot null is shutting down NOW!
14385 [Test worker] 2018-01-08 14:56:23,260 INFO  TradingEngine isRunning() - isRunning: false
14385 [Test worker] 2018-01-08 14:56:23,260 INFO  TradingEngine isRunning() - isRunning: false
14390 [Test worker] 2018-01-08 14:56:23,265 INFO  TradingEngine <init>() - Initialising Trading Engine...
14391 [pool-4-thread-1] 2018-01-08 14:56:23,266 INFO  TradingEngine initConfig() - Initialising BX-bot config...
14391 [pool-4-thread-1] 2018-01-08 14:56:23,266 INFO  TradingEngine loadExchangeAdapterConfig() - Fetched Exchange config from repository: ExchangeConfig{exchangeName=Bitstamp, exchangeAdapter=com.my.adapters.DummyBitstampExchangeAdapter, networkConfig=NetworkConfig{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}, optionalConfig=OptionalConfig{items={sell-fee=0.25}}}
14392 [pool-4-thread-1] 2018-01-08 14:56:23,267 INFO  TradingEngine loadExchangeAdapterConfig() - Trading Engine will use Exchange Adapter for: Bitstamp
14392 [pool-4-thread-1] 2018-01-08 14:56:23,267 INFO  TradingEngine loadExchangeAdapterConfig() - NetworkConfiguration has been set: NetworkConfigImpl{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}
14392 [pool-4-thread-1] 2018-01-08 14:56:23,267 INFO  TradingEngine loadExchangeAdapterConfig() - Optional Exchange Adapter config has been set: OptionalConfigImpl{items={sell-fee=0.25}}
14392 [pool-4-thread-1] 2018-01-08 14:56:23,267 INFO  TradingEngine loadEngineConfig() - Fetched Engine config from repository: EngineConfig{botId=null, botName=null, emergencyStopCurrency=BTC, emergencyStopBalance=0.5, tradeCycleInterval=1}
14392 [pool-4-thread-1] 2018-01-08 14:56:23,267 DEBUG TradingEngine loadTradingStrategyConfig() - Fetched Strategy config from repository: [StrategyConfig{id=MyMacdStrategy_v3, name=MACD Shorting algo, description=MACD Shorting algo description, className=com.my.strats.MyMacdStrategy, beanName=null, configItems={btc-sell-order-amount=0.2}}]
14392 [pool-4-thread-1] 2018-01-08 14:56:23,267 INFO  TradingEngine loadTradingStrategyConfig() - Registered Trading Strategy with Trading Engine - ID: MyMacdStrategy_v3
14392 [pool-4-thread-1] 2018-01-08 14:56:23,267 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Fetched Markets config from repository: [MarketConfig{id=btc_usd, name=BTC/USD, baseCurrency=BTC, counterCurrency=USD, enabled=true, tradingStrategyId=MyMacdStrategy_v3}]
14393 [pool-4-thread-1] 2018-01-08 14:56:23,268 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Market Trading Strategy Id: MyMacdStrategy_v3
14393 [pool-4-thread-1] 2018-01-08 14:56:23,268 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - StrategyConfigImpl (optional): StrategyConfigItems{items={btc-sell-order-amount=0.2}}
14393 [pool-4-thread-1] 2018-01-08 14:56:23,268 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Initialized trading strategy successfully. Name: [MACD Shorting algo] Class: com.my.strats.MyMacdStrategy
14393 [pool-4-thread-1] 2018-01-08 14:56:23,268 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Loaded and set Market configuration successfully!
14394 [pool-4-thread-1] 2018-01-08 14:56:23,269 INFO  TradingEngine runMainControlLoop() - Starting Trading Engine for null ...
14394 [pool-4-thread-1] 2018-01-08 14:56:23,269 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
14394 [pool-4-thread-1] 2018-01-08 14:56:23,269 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
14394 [pool-4-thread-1] 2018-01-08 14:56:23,269 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop Currency balance available on exchange is [0.5] BTC
14395 [pool-4-thread-1] 2018-01-08 14:56:23,270 INFO  TradingEngine isEmergencyStopLimitBreached() - Balance that will stop ALL trading across ALL markets is [0.5] BTC
14395 [pool-4-thread-1] 2018-01-08 14:56:23,270 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop check PASSED!
14395 [pool-4-thread-1] 2018-01-08 14:56:23,270 INFO  TradingEngine runMainControlLoop() - Executing Trading Strategy ---> $Proxy13
14395 [pool-4-thread-1] 2018-01-08 14:56:23,270 INFO  TradingEngine runMainControlLoop() - *** Sleeping 1s til next trade cycle... ***
15396 [pool-4-thread-1] 2018-01-08 14:56:24,271 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
15396 [pool-4-thread-1] 2018-01-08 14:56:24,271 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
15396 [pool-4-thread-1] 2018-01-08 14:56:24,271 ERROR TradingEngine runMainControlLoop() - A network error has occurred in Exchange Adapter! BX-bot will attempt next trade in 1s...
com.gazbert.bxbot.trading.api.ExchangeNetworkException: Man walks down the street in a hat like that, you know he's not afraid of anything...
	at org.easymock.internal.MockInvocationHandler.invoke(MockInvocationHandler.java:46) ~[easymock-3.5.1.jar:3.5.1]
	at org.easymock.internal.ObjectMethodsFilter.invoke(ObjectMethodsFilter.java:94) ~[easymock-3.5.1.jar:3.5.1]
	at com.sun.proxy.$Proxy12.getBalanceInfo(Unknown Source) ~[?:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.isEmergencyStopLimitBreached(TradingEngine.java:348) ~[main/:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.runMainControlLoop(TradingEngine.java:221) ~[main/:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.start(TradingEngine.java:191) ~[main/:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_144]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_144]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_144]
16397 [pool-4-thread-1] 2018-01-08 14:56:25,272 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
16397 [pool-4-thread-1] 2018-01-08 14:56:25,272 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
16397 [pool-4-thread-1] 2018-01-08 14:56:25,272 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop Currency balance available on exchange is [0.5] BTC
16397 [pool-4-thread-1] 2018-01-08 14:56:25,272 INFO  TradingEngine isEmergencyStopLimitBreached() - Balance that will stop ALL trading across ALL markets is [0.5] BTC
16397 [pool-4-thread-1] 2018-01-08 14:56:25,272 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop check PASSED!
16398 [pool-4-thread-1] 2018-01-08 14:56:25,273 INFO  TradingEngine runMainControlLoop() - Executing Trading Strategy ---> $Proxy13
16398 [pool-4-thread-1] 2018-01-08 14:56:25,273 INFO  TradingEngine runMainControlLoop() - *** Sleeping 1s til next trade cycle... ***
17399 [pool-4-thread-1] 2018-01-08 14:56:26,274 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
17399 [pool-4-thread-1] 2018-01-08 14:56:26,274 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
17399 [pool-4-thread-1] 2018-01-08 14:56:26,274 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop Currency balance available on exchange is [0.5] BTC
17399 [pool-4-thread-1] 2018-01-08 14:56:26,274 INFO  TradingEngine isEmergencyStopLimitBreached() - Balance that will stop ALL trading across ALL markets is [0.5] BTC
17399 [pool-4-thread-1] 2018-01-08 14:56:26,274 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop check PASSED!
17399 [pool-4-thread-1] 2018-01-08 14:56:26,274 INFO  TradingEngine runMainControlLoop() - Executing Trading Strategy ---> $Proxy13
17399 [pool-4-thread-1] 2018-01-08 14:56:26,274 INFO  TradingEngine runMainControlLoop() - *** Sleeping 1s til next trade cycle... ***
18392 [Test worker] 2018-01-08 14:56:27,267 INFO  TradingEngine isRunning() - isRunning: true
18392 [Test worker] 2018-01-08 14:56:27,267 INFO  TradingEngine isRunning() - isRunning: true
18392 [Test worker] 2018-01-08 14:56:27,267 INFO  TradingEngine shutdown() - Shutdown request received!
18392 [Test worker] 2018-01-08 14:56:27,267 INFO  TradingEngine shutdown() - Engine originally started in thread: Thread[pool-4-thread-1,5,main]
18392 [pool-4-thread-1] 2018-01-08 14:56:27,267 WARN  TradingEngine runMainControlLoop() - Control Loop thread interrupted when sleeping before next trade cycle
18393 [pool-4-thread-1] 2018-01-08 14:56:27,268 FATAL TradingEngine runMainControlLoop() - BX-bot null is shutting down NOW!
19394 [Test worker] 2018-01-08 14:56:28,269 INFO  TradingEngine isRunning() - isRunning: false
19394 [Test worker] 2018-01-08 14:56:28,269 INFO  TradingEngine isRunning() - isRunning: false
19398 [Test worker] 2018-01-08 14:56:28,273 INFO  TradingEngine <init>() - Initialising Trading Engine...
19398 [Test worker] 2018-01-08 14:56:28,273 INFO  TradingEngine initConfig() - Initialising BX-bot config...
19399 [Test worker] 2018-01-08 14:56:28,274 INFO  TradingEngine loadExchangeAdapterConfig() - Fetched Exchange config from repository: ExchangeConfig{exchangeName=Bitstamp, exchangeAdapter=com.my.adapters.DummyBitstampExchangeAdapter, networkConfig=NetworkConfig{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}, optionalConfig=OptionalConfig{items={sell-fee=0.25}}}
19399 [Test worker] 2018-01-08 14:56:28,274 INFO  TradingEngine loadExchangeAdapterConfig() - Trading Engine will use Exchange Adapter for: Bitstamp
19399 [Test worker] 2018-01-08 14:56:28,274 INFO  TradingEngine loadExchangeAdapterConfig() - NetworkConfiguration has been set: NetworkConfigImpl{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}
19400 [Test worker] 2018-01-08 14:56:28,275 INFO  TradingEngine loadExchangeAdapterConfig() - Optional Exchange Adapter config has been set: OptionalConfigImpl{items={sell-fee=0.25}}
19400 [Test worker] 2018-01-08 14:56:28,275 INFO  TradingEngine loadEngineConfig() - Fetched Engine config from repository: EngineConfig{botId=null, botName=null, emergencyStopCurrency=BTC, emergencyStopBalance=0.5, tradeCycleInterval=1}
19400 [Test worker] 2018-01-08 14:56:28,275 DEBUG TradingEngine loadTradingStrategyConfig() - Fetched Strategy config from repository: [StrategyConfig{id=MyMacdStrategy_v3, name=MACD Shorting algo, description=MACD Shorting algo description, className=com.my.strats.MyMacdStrategy, beanName=null, configItems={btc-sell-order-amount=0.2}}]
19400 [Test worker] 2018-01-08 14:56:28,275 INFO  TradingEngine loadTradingStrategyConfig() - Registered Trading Strategy with Trading Engine - ID: MyMacdStrategy_v3
19400 [Test worker] 2018-01-08 14:56:28,275 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Fetched Markets config from repository: [MarketConfig{id=btc_usd, name=BTC/USD, baseCurrency=BTC, counterCurrency=USD, enabled=true, tradingStrategyId=MyMacdStrategy_v3}]
19401 [Test worker] 2018-01-08 14:56:28,276 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Market Trading Strategy Id: MyMacdStrategy_v3
19401 [Test worker] 2018-01-08 14:56:28,276 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - StrategyConfigImpl (optional): StrategyConfigItems{items={btc-sell-order-amount=0.2}}
19401 [Test worker] 2018-01-08 14:56:28,276 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Initialized trading strategy successfully. Name: [MACD Shorting algo] Class: com.my.strats.MyMacdStrategy
19401 [Test worker] 2018-01-08 14:56:28,276 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Loaded and set Market configuration successfully!
19401 [Test worker] 2018-01-08 14:56:28,276 INFO  TradingEngine runMainControlLoop() - Starting Trading Engine for null ...
19401 [Test worker] 2018-01-08 14:56:28,276 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
19402 [Test worker] 2018-01-08 14:56:28,277 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
19402 [Test worker] 2018-01-08 14:56:28,277 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop Currency balance available on exchange is [0.5] BTC
19402 [Test worker] 2018-01-08 14:56:28,277 INFO  TradingEngine isEmergencyStopLimitBreached() - Balance that will stop ALL trading across ALL markets is [0.5] BTC
19402 [Test worker] 2018-01-08 14:56:28,277 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop check PASSED!
19402 [Test worker] 2018-01-08 14:56:28,277 INFO  TradingEngine runMainControlLoop() - Executing Trading Strategy ---> $Proxy13
19403 [Test worker] 2018-01-08 14:56:28,278 INFO  TradingEngine runMainControlLoop() - *** Sleeping 1s til next trade cycle... ***
20403 [Test worker] 2018-01-08 14:56:29,278 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
20403 [Test worker] 2018-01-08 14:56:29,278 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
20403 [Test worker] 2018-01-08 14:56:29,278 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop Currency balance available on exchange is [0.5] BTC
20403 [Test worker] 2018-01-08 14:56:29,278 INFO  TradingEngine isEmergencyStopLimitBreached() - Balance that will stop ALL trading across ALL markets is [0.5] BTC
20404 [Test worker] 2018-01-08 14:56:29,279 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop check PASSED!
20404 [Test worker] 2018-01-08 14:56:29,279 INFO  TradingEngine runMainControlLoop() - Executing Trading Strategy ---> $Proxy13
20404 [Test worker] 2018-01-08 14:56:29,279 FATAL TradingEngine runMainControlLoop() - A FATAL error has occurred in Trading Strategy!
com.gazbert.bxbot.strategy.api.StrategyException: Eeek! My strat just broke. Please shutdown!
	at org.easymock.internal.MockInvocationHandler.invoke(MockInvocationHandler.java:46) ~[easymock-3.5.1.jar:3.5.1]
	at org.easymock.internal.ObjectMethodsFilter.invoke(ObjectMethodsFilter.java:94) ~[easymock-3.5.1.jar:3.5.1]
	at com.sun.proxy.$Proxy13.execute(Unknown Source) ~[?:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.runMainControlLoop(TradingEngine.java:228) [main/:?]
	at com.gazbert.bxbot.core.engine.TradingEngine.start(TradingEngine.java:191) [main/:?]
	at com.gazbert.bxbot.core.engine.TestTradingEngine.testEngineShutsDownWhenItReceivesStrategyExceptionFromTradingStrategy(TestTradingEngine.java:303) [test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:326) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:310) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:131) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$TestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:147) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.evaluateStatement(PowerMockJUnit47RunnerDelegateImpl.java:107) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:298) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:218) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:160) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:134) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44) [junit-4.12.jar:4.12]
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:136) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:121) [powermock-module-junit4-common-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57) [powermock-module-junit4-common-1.7.3.jar:1.7.3]
	at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59) [powermock-module-junit4-1.7.3.jar:1.7.3]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) [gradle-testing-jvm-4.4.1.jar:4.4.1]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) [gradle-testing-base-4.4.1.jar:4.4.1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) [gradle-messaging-4.4.1.jar:4.4.1]
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source) [?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108) [gradle-testing-base-4.4.1.jar:4.4.1]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) [gradle-messaging-4.4.1.jar:4.4.1]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) [gradle-base-services-4.4.1.jar:4.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) [gradle-base-services-4.4.1.jar:4.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_144]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_144]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) [gradle-base-services-4.4.1.jar:4.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_144]
20406 [Test worker] 2018-01-08 14:56:29,281 FATAL TradingEngine runMainControlLoop() - BX-bot null is shutting down NOW!
21408 [Test worker] 2018-01-08 14:56:30,283 INFO  TradingEngine isRunning() - isRunning: false
21409 [Test worker] 2018-01-08 14:56:30,284 INFO  TradingEngine isRunning() - isRunning: false
21417 [Test worker] 2018-01-08 14:56:30,292 INFO  TradingEngine <init>() - Initialising Trading Engine...
21420 [pool-5-thread-1] 2018-01-08 14:56:30,295 INFO  TradingEngine initConfig() - Initialising BX-bot config...
21421 [pool-5-thread-1] 2018-01-08 14:56:30,296 INFO  TradingEngine loadExchangeAdapterConfig() - Fetched Exchange config from repository: ExchangeConfig{exchangeName=Bitstamp, exchangeAdapter=com.my.adapters.DummyBitstampExchangeAdapter, networkConfig=NetworkConfig{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}, optionalConfig=OptionalConfig{items={sell-fee=0.25}}}
21422 [pool-5-thread-1] 2018-01-08 14:56:30,297 INFO  TradingEngine loadExchangeAdapterConfig() - Trading Engine will use Exchange Adapter for: Bitstamp
21423 [pool-5-thread-1] 2018-01-08 14:56:30,298 INFO  TradingEngine loadExchangeAdapterConfig() - NetworkConfiguration has been set: NetworkConfigImpl{connectionTimeout=30, nonFatalErrorCodes=[502, 503, 504], nonFatalErrorMessages=[Connection reset, Connection refused, Remote host closed connection during handshake]}
21423 [pool-5-thread-1] 2018-01-08 14:56:30,298 INFO  TradingEngine loadExchangeAdapterConfig() - Optional Exchange Adapter config has been set: OptionalConfigImpl{items={sell-fee=0.25}}
21424 [pool-5-thread-1] 2018-01-08 14:56:30,299 INFO  TradingEngine loadEngineConfig() - Fetched Engine config from repository: EngineConfig{botId=null, botName=null, emergencyStopCurrency=BTC, emergencyStopBalance=0.5, tradeCycleInterval=1}
21424 [pool-5-thread-1] 2018-01-08 14:56:30,299 DEBUG TradingEngine loadTradingStrategyConfig() - Fetched Strategy config from repository: [StrategyConfig{id=MyMacdStrategy_v3, name=MACD Shorting algo, description=MACD Shorting algo description, className=com.my.strats.MyMacdStrategy, beanName=null, configItems={btc-sell-order-amount=0.2}}]
21425 [pool-5-thread-1] 2018-01-08 14:56:30,300 INFO  TradingEngine loadTradingStrategyConfig() - Registered Trading Strategy with Trading Engine - ID: MyMacdStrategy_v3
21425 [pool-5-thread-1] 2018-01-08 14:56:30,300 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Fetched Markets config from repository: [MarketConfig{id=btc_usd, name=BTC/USD, baseCurrency=BTC, counterCurrency=USD, enabled=true, tradingStrategyId=MyMacdStrategy_v3}]
21426 [pool-5-thread-1] 2018-01-08 14:56:30,301 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Market Trading Strategy Id: MyMacdStrategy_v3
21426 [pool-5-thread-1] 2018-01-08 14:56:30,301 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - StrategyConfigImpl (optional): StrategyConfigItems{items={btc-sell-order-amount=0.2}}
21427 [pool-5-thread-1] 2018-01-08 14:56:30,302 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Initialized trading strategy successfully. Name: [MACD Shorting algo] Class: com.my.strats.MyMacdStrategy
21428 [pool-5-thread-1] 2018-01-08 14:56:30,303 INFO  TradingEngine loadMarketConfigAndInitialiseTradingStrategies() - Loaded and set Market configuration successfully!
21428 [pool-5-thread-1] 2018-01-08 14:56:30,303 INFO  TradingEngine runMainControlLoop() - Starting Trading Engine for null ...
21429 [pool-5-thread-1] 2018-01-08 14:56:30,304 INFO  TradingEngine runMainControlLoop() - *** Starting next trade cycle... ***
21429 [pool-5-thread-1] 2018-01-08 14:56:30,304 INFO  TradingEngine isEmergencyStopLimitBreached() - Performing Emergency Stop check...
21430 [pool-5-thread-1] 2018-01-08 14:56:30,305 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop Currency balance available on exchange is [0.5] BTC
21430 [pool-5-thread-1] 2018-01-08 14:56:30,305 INFO  TradingEngine isEmergencyStopLimitBreached() - Balance that will stop ALL trading across ALL markets is [0.5] BTC
21431 [pool-5-thread-1] 2018-01-08 14:56:30,306 INFO  TradingEngine isEmergencyStopLimitBreached() - Emergency Stop check PASSED!
21431 [pool-5-thread-1] 2018-01-08 14:56:30,306 INFO  TradingEngine runMainControlLoop() - Executing Trading Strategy ---> $Proxy13
21432 [pool-5-thread-1] 2018-01-08 14:56:30,307 INFO  TradingEngine runMainControlLoop() - *** Sleeping 1s til next trade cycle... ***
22420 [Test worker] 2018-01-08 14:56:31,295 INFO  TradingEngine isRunning() - isRunning: true
22421 [Test worker] 2018-01-08 14:56:31,296 INFO  TradingEngine isRunning() - isRunning: true
22422 [Test worker] 2018-01-08 14:56:31,297 ERROR TradingEngine start() - Cannot start Trading Engine because it is already running!
22427 [Test worker] 2018-01-08 14:56:31,302 INFO  TradingEngine <init>() - Initialising Trading Engine...
22428 [Test worker] 2018-01-08 14:56:31,303 INFO  TradingEngine isRunning() - isRunning: false
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
